logging.level.de.atabey.kafka.twitter.interceptor.MyProducerInterceptor=INFO
logging.level.de.atabey.kafka.twitter.interceptor.MyConsumerInterceptor=INFO
logging.level.de.atabey.kafka.twitter.consumer.ConsumerEventListener=DEBUG
#logging.level.org.springframework.kafka=DEBUG

spring.kafka.admin.fail-fast=true
#spring.kafka.bootstrap-servers=localhost:9092

### SERIALIZER
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=myTweet:de.atabey.kafka.twitter.model.MyTweet
spring.kafka.consumer.value-serializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=myTweet:de.atabey.kafka.twitter.model.MyTweet

#### SAFE PRODUCER   ###########
spring.kafka.producer.properties.enable.idempotence=true
# führt automatisch zu folgender Konfiguration
spring.kafka.producer.acks=all
spring.kafka.producer.retries=2147483647
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
# zusätzlich muss am topic folgende property gesetzt sein
#spring.kafka.producer.properties.min.insync.replicas=2

###### high throughput properties at the expense of latency nad cpu usage  #######
##### Message Compression  ########
spring.kafka.producer.compression-type=snappy
# https://blog.cloudflare.com/squeezing-the-firehose/
spring.kafka.producer.batch-size=36864
spring.kafka.producer.properties.linger.ms=5

spring.kafka.producer.properties.interceptor.classes=de.atabey.kafka.twitter.interceptor.MyProducerInterceptor
spring.kafka.consumer.properties.interceptor.classes=de.atabey.kafka.twitter.interceptor.MyConsumerInterceptor

spring.kafka.consumer.group-id=tweetApp
#spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.ack-mode=manual
spring.kafka.listener.log-container-config=true